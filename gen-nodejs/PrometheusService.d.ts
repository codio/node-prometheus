//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


declare class PrometheusServiceClient {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  getCourses(ids: string[], withModules: boolean): GetCourseResult;

  getCourses(ids: string[], withModules: boolean, callback: Function): void;

  createCourse(details: CourseDetails): Course;

  createCourse(details: CourseDetails, callback: Function): void;

  updateCourse(id: string, details: UpdateCourseDetails): Course;

  updateCourse(id: string, details: UpdateCourseDetails, callback: Function): void;

  setCourseModules(id: string, moduleIds: string[]): void;

  setCourseModules(id: string, moduleIds: string[], callback: Function): void;

  deleteCourse(id: string): void;

  deleteCourse(id: string, callback: Function): void;

  getModules(ids: string[], withUnits: boolean): Module[];

  getModules(ids: string[], withUnits: boolean, callback: Function): void;

  getModuleByUnitId(unitId: string): Module;

  getModuleByUnitId(unitId: string, callback: Function): void;

  createModule(details: ModuleDetails): Module;

  createModule(details: ModuleDetails, callback: Function): void;

  updateModule(id: string, details: UpdateModuleDetails): Module;

  updateModule(id: string, details: UpdateModuleDetails, callback: Function): void;

  deleteModule(id: string): void;

  deleteModule(id: string, callback: Function): void;

  addUnitToModule(moduleId: string, unitDetails: UnitDetails): ModuleUnit;

  addUnitToModule(moduleId: string, unitDetails: UnitDetails, callback: Function): void;

  updateUnit(id: string, details: UpdateUnitDetails): void;

  updateUnit(id: string, details: UpdateUnitDetails, callback: Function): void;

  publishUnit(taskId: string, unitId: string, projectId: string, stackVersionId: string): void;

  publishUnit(taskId: string, unitId: string, projectId: string, stackVersionId: string, callback: Function): void;

  changeStackVersionInUnit(unitId: string, stackVersionId: string): ChangeStackVersionInUnitResult;

  changeStackVersionInUnit(unitId: string, stackVersionId: string, callback: Function): void;

  removeUnit(id: string): void;

  removeUnit(id: string, callback: Function): void;

  getUnit(id: string): ModuleUnit;

  getUnit(id: string, callback: Function): void;

  reorderUnits(moduleId: string, unitIds: string[]): void;

  reorderUnits(moduleId: string, unitIds: string[], callback: Function): void;
}
